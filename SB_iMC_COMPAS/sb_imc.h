//Description    : This file contains the relevant bus addresses of PCI devices 
//	           in Intel Sandy Bridge	

// SB UNCORE REGISTERS

#define PCI_DEVICE_INTEL_SANDYBRIDGE_SAD0        0x3cf4  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_SAD1        0x3cf6  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_BR          0x3cf5  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_HA0     0x3ca0  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_TA      0x3ca8  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_RAS     0x3c71  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_CH0_TAD    0x3caa  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_CH1_TAD    0x3cab  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_CH2_TAD    0x3cac  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_CH3_TAD    0x3cad  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_DDRIO   0x3cb8  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_CH0_TC   0x3cb0 
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_CH1_TC   0x3cb1  	
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_CH2_TC   0x3cb4  
#define PCI_DEVICE_INTEL_SANDYBRIDGE_IMC_CH3_TC   0x3cb5  


#define PCI_SUBDEV_INTEL_SANDYBRIDGE_SAD0         12 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_SAD1         12 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_BR           13 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_HA0      14 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_TA       15 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_RAS      15 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_CH0_TAD     15 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_CH1_TAD     15 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_CH2_TAD     15 
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_CH3_TAD     15
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_DDRIO    17
#define PCI_SUBDEV_INTEL_SANDYBRIDGE_IMC_TC    16

#define PCI_DEVFN_INTEL_SANDYBRIDGE_SAD0         6 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_SAD1         7 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_BR           6 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_HA0      0 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_TA       0 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_RAS      1 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_CH0_TAD     2 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_CH1_TAD     3 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_CH2_TAD     4 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_CH3_TAD     5 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_DDRIO    0 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_CH0_TC     0
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_CH1_TC     1 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_CH2_TC     4 
#define PCI_DEVFN_INTEL_SANDYBRIDGE_IMC_CH3_TC     5 



//MC Memory Technology Register
//MCMTR Page 338
 
#define MMTR_PCI_OFFSET 		0X7c
#define IS_ECC_ENABLE(reg) 	FORM_BIT_FIELD(reg,2,2)
#define IS_LOCKSTEP_ENABLE(reg) FORM_BIT_FIELD(reg,1,1)
#define IS_CLOSE_PAGE(reg)	FORM_BIT_FIELD(reg,0,0)


// DRAM_RULE
// Page 321

#define SAD_DRAM_RULE_1_PCI_OFFSET   0x80
#define SAD_DRAM_RULE_2_PCI_OFFSET   0x88
#define SAD_DRAM_RULE_3_PCI_OFFSET   0x90
#define SAD_DRAM_RULE_4_PCI_OFFSET   0x98
#define SAD_DRAM_RULE_5_PCI_OFFSET   0xA0
#define SAD_DRAM_RULE_6_PCI_OFFSET   0xA8
#define SAD_DRAM_RULE_7_PCI_OFFSET   0xB0
#define SAD_DRAM_RULE_8_PCI_OFFSET   0xB8
#define SAD_DRAM_RULE_9_PCI_OFFSET   0xC0
#define SAD_DRAM_RULE_10_PCI_OFFSET  0xC8

//INTERLEAVE_LIST
//Page 321

#define SAD_DRAM_INTERLEAVE_RULE_1_DECODE_PCI_OFFSET    0x84
#define SAD_DRAM_INTERLEAVE_RULE_2_DECODE_PCI_OFFSET    0x8c
#define SAD_DRAM_INTERLEAVE_RULE_3_DECODE_PCI_OFFSET    0x94
#define SAD_DRAM_INTERLEAVE_RULE_4_DECODE_PCI_OFFSET    0x9c
#define SAD_DRAM_INTERLEAVE_RULE_5_DECODE_PCI_OFFSET    0xA4
#define SAD_DRAM_INTERLEAVE_RULE_6_DECODE_PCI_OFFSET    0xAc
#define SAD_DRAM_INTERLEAVE_RULE_7_DECODE_PCI_OFFSET    0xB4
#define SAD_DRAM_INTERLEAVE_RULE_8_DECODE_PCI_OFFSET    0xBc
#define SAD_DRAM_INTERLEAVE_RULE_9_DECODE_PCI_OFFSET    0xC4
#define SAD_DRAM_INTERLEAVE_RULE_10_DECODE_PCI_OFFSET   0xCc

#define NODE_ID1(reg)  FORM_BIT_FIELD(reg, 0,2)
#define NODE_ID2(reg)  FORM_BIT_FIELD(reg, 3,5)
#define NODE_ID3(reg)  FORM_BIT_FIELD(reg, 8,10)
#define NODE_ID4(reg)  FORM_BIT_FIELD(reg, 11,13)
#define NODE_ID5(reg)  FORM_BIT_FIELD(reg, 16,18)
#define NODE_ID6(reg)  FORM_BIT_FIELD(reg, 19,21)
#define NODE_ID7(reg)  FORM_BIT_FIELD(reg, 24,26)
#define NODE_ID8(reg)  FORM_BIT_FIELD(reg, 27,29)

#define SAD_RULE_ENABLE(reg)            FORM_BIT_FIELD(reg,0,0)
#define SAD_INTERLEAVE_MODE(reg) 	FORM_BIT_FIELD(reg,1,1)
#define DRAM_ATTR(reg) 			FORM_BIT_FIELD(reg,2,3)


//TAD Range Wayness, Limit and Target Register
//Page 339

#define TAD_RULE1_PCI_OFFSET 	0x80
#define TAD_RULE2_PCI_OFFSET 	0x88
#define TAD_RULE3_PCI_OFFSET 	0x90
#define TAD_RULE4_PCI_OFFSET 	0x98
#define TAD_RULE5_PCI_OFFSET 	0xA0
#define TAD_RULE6_PCI_OFFSET 	0xA8
#define TAD_RULE7_PCI_OFFSET 	0xB0
#define TAD_RULE8_PCI_OFFSET 	0xB8
#define TAD_RULE9_PCI_OFFSET 	0xC0
#define TAD_RULE10_PCI_OFFSET 	0xC8
#define TAD_RULE11_PCI_OFFSET 	0xD0
#define TAD_RULE12_PCI_OFFSET 	0xD8

#define TAD_RANGE_LIMIT(reg)	FORM_BIT_FIELD(reg,12,31)
#define SOCKET_WAYS(reg) 	FORM_BIT_FIELD(reg,10,11) 
#define CHANNEL_WAYS(reg)       FORM_BIT_FIELD(reg,8,9)

//iMC TARGET ADDRESS DECODE REGISTERS
//Page 359
//TADCHNILVPCI_OFFSET
//PCI_OFFSET Register

#define CH1_PCI_FUNC 2
#define CH2_PCI_FUNC 3
#define CH3_PCI_FUNC 4
#define CH4_PCI_FUNC 5

#define TAD_RULE1_DECODE_PCI_OFFSET 	0x90
#define TAD_RULE2_DECODE_PCI_OFFSET 	0x94
#define TAD_RULE3_DECODE_PCI_OFFSET 	0x98
#define TAD_RULE4_DECODE_PCI_OFFSET 	0x9C
#define TAD_RULE5_DECODE_PCI_OFFSET 	0xA0
#define TAD_RULE6_DECODE_PCI_OFFSET 	0xA4
#define TAD_RULE7_DECODE_PCI_OFFSET 	0xA8
#define TAD_RULE8_DECODE_PCI_OFFSET 	0xAC
#define TAD_RULE9_DECODE_PCI_OFFSET 	0xB0
#define TAD_RULE10_DECODE_PCI_OFFSET 	0xB4
#define TAD_RULE11_DECODE_PCI_OFFSET 	0xB8
#define TAD_RULE12_DECODE_PCI_OFFSET 	0xBc

#define CH_ID_PCI_OFFSET(reg)         FORM_BIT_FIELD(reg,28,29)
#define TAD_RULE_PCI_OFFSET(reg)      FORM_BIT_FIELD(reg,6,25)


#define MAX_CH_WAYS    4

#define RIR_RULE1_PCI_OFFSET 0x108
#define RIR_RULE2_PCI_OFFSET 0x10c
#define RIR_RULE3_PCI_OFFSET 0x110
#define RIR_RULE4_PCI_OFFSET 0x114
#define RIR_RULE5_PCI_OFFSET 0x118

#define RIR_VALID(reg)    FORM_BIT_FIELD(reg,31,31)
#define RIR_CH_LIMIT(reg) FORM_BIT_FIELD(reg,1,10) // 29:38
//#define RIR_WAYS(reg)     FORM_BIT_FIELD(reg,28,29)


#define RANK_RANGE1_INTERLEAVE_INDEX1_DECODE_PCI_OFFSET 	0x120
#define RANK_RANGE1_INTERLEAVE_INDEX2_DECODE_PCI_OFFSET 	0x124
#define RANK_RANGE1_INTERLEAVE_INDEX3_DECODE_PCI_OFFSET 	0x128
#define RANK_RANGE1_INTERLEAVE_INDEX4_DECODE_PCI_OFFSET 	0x12c
#define RANK_RANGE1_INTERLEAVE_INDEX5_DECODE_PCI_OFFSET 	0x130
#define RANK_RANGE1_INTERLEAVE_INDEX6_DECODE_PCI_OFFSET 	0x134
#define RANK_RANGE1_INTERLEAVE_INDEX7_DECODE_PCI_OFFSET 	0x138
#define RANK_RANGE1_INTERLEAVE_INDEX8_DECODE_PCI_OFFSET 	0x13c

#define RANK_RANGE2_INTERLEAVE_INDEX1_DECODE_PCI_OFFSET 	0x140
#define RANK_RANGE2_INTERLEAVE_INDEX2_DECODE_PCI_OFFSET 	0x144
#define RANK_RANGE2_INTERLEAVE_INDEX3_DECODE_PCI_OFFSET 	0x148
#define RANK_RANGE2_INTERLEAVE_INDEX4_DECODE_PCI_OFFSET 	0x14c
#define RANK_RANGE2_INTERLEAVE_INDEX5_DECODE_PCI_OFFSET 	0x150
#define RANK_RANGE2_INTERLEAVE_INDEX6_DECODE_PCI_OFFSET 	0x154
#define RANK_RANGE2_INTERLEAVE_INDEX7_DECODE_PCI_OFFSET 	0x158
#define RANK_RANGE2_INTERLEAVE_INDEX8_DECODE_PCI_OFFSET 	0x15c

#define RANK_RANGE3_INTERLEAVE_INDEX1_DECODE_PCI_OFFSET 	0x160
#define RANK_RANGE3_INTERLEAVE_INDEX2_DECODE_PCI_OFFSET 	0x164
#define RANK_RANGE3_INTERLEAVE_INDEX3_DECODE_PCI_OFFSET 	0x168
#define RANK_RANGE3_INTERLEAVE_INDEX4_DECODE_PCI_OFFSET 	0x16c
#define RANK_RANGE3_INTERLEAVE_INDEX5_DECODE_PCI_OFFSET 	0x170
#define RANK_RANGE3_INTERLEAVE_INDEX6_DECODE_PCI_OFFSET 	0x174
#define RANK_RANGE3_INTERLEAVE_INDEX7_DECODE_PCI_OFFSET 	0x178
#define RANK_RANGE3_INTERLEAVE_INDEX8_DECODE_PCI_OFFSET 	0x17c

#define RANK_RANGE4_INTERLEAVE_INDEX1_DECODE_PCI_OFFSET 	0x180
#define RANK_RANGE4_INTERLEAVE_INDEX2_DECODE_PCI_OFFSET 	0x184
#define RANK_RANGE4_INTERLEAVE_INDEX3_DECODE_PCI_OFFSET 	0x188
#define RANK_RANGE4_INTERLEAVE_INDEX4_DECODE_PCI_OFFSET 	0x18c
#define RANK_RANGE4_INTERLEAVE_INDEX5_DECODE_PCI_OFFSET 	0x190
#define RANK_RANGE4_INTERLEAVE_INDEX6_DECODE_PCI_OFFSET 	0x194
#define RANK_RANGE4_INTERLEAVE_INDEX7_DECODE_PCI_OFFSET 	0x198
#define RANK_RANGE4_INTERLEAVE_INDEX8_DECODE_PCI_OFFSET 	0x19c

#define RANK_RANGE5_INTERLEAVE_INDEX1_DECODE_PCI_OFFSET 	0x1A0
#define RANK_RANGE5_INTERLEAVE_INDEX2_DECODE_PCI_OFFSET 	0x1A4
#define RANK_RANGE5_INTERLEAVE_INDEX3_DECODE_PCI_OFFSET 	0x1A8
#define RANK_RANGE5_INTERLEAVE_INDEX4_DECODE_PCI_OFFSET 	0x1Ac
#define RANK_RANGE5_INTERLEAVE_INDEX5_DECODE_PCI_OFFSET 	0x1B0
#define RANK_RANGE5_INTERLEAVE_INDEX6_DECODE_PCI_OFFSET 	0x1B4
#define RANK_RANGE5_INTERLEAVE_INDEX7_DECODE_PCI_OFFSET 	0x1B8
#define RANK_RANGE5_INTERLEAVE_INDEX8_DECODE_PCI_OFFSET 	0x1Bc

#define RIR_RNK_TGT(reg)   FORM_BIT_FIELD(reg,16,19)
#define RIR_PCI_OFFSET(reg)    FORM_BIT_FIELD(reg,2,14)

// DIMM MEMORY TECHNOLOGY REGISTER						
// Page 358 DIMMTR
#define MAX_DIMMS 3

#define DIMM1_PCI_OFFSET 0x80
#define DIMM2_PCI_OFFSET 0x84
#define DIMM3_PCI_OFFSET 0x88

#define DIMM_CHN1_PCI_FUNC	2
#define DIMM_CHN2_PCI_FUNC	3
#define DIMM_CHN3_PCI_FUNC	4
#define DIMM_CHN4_PCI_FUNC	5

#define DIMM_STATUS(reg)        FORM_BIT_FIELD(reg,14,14)
#define RANK_CNT(reg)  		FORM_BIT_FIELD(reg,12,13)
#define RANK_STATUS(reg)        FORM_BIT_FIELD(reg,16,19)
#define RANK_ROW_WIDTH(reg)     FORM_BIT_FIELD(reg,2,4)
#define RANK_COLUMN_WIDTH(reg)  FORM_BIT_FIELD(reg,0,1)
